@import 'settings';

@mixin round($size) {
  width: $size;
  height: $size;
  border-radius: 50%;
}

@mixin fixed-height($height) {
  max-height: $height;
  min-height: $height;
  height: $height;
}

@mixin fixed-width($width) {
  max-width: $width;
  min-width: $width;
  width: $width;
}

@mixin custom-select() {
  -moz-appearance: none;
  -webkit-appearance: textfield;
  box-shadow: none;
  cursor: pointer;

  &::-ms-expand {
    display: none;
  }
}

@mixin wide-desktop-min {
  @media screen and (min-width: #{$wide-desktop-width}) {
    @content;
  }
}

@mixin desktop-min {
  @media screen and (min-width: #{$desktop-width}) {
    @content;
  }
}

@mixin low-desktop {
  @media screen and (max-width: #{$desktop-width - 1px}) {
    @content;
  }
}

@mixin low-desktop-only {
  @media screen and (min-width: #{$low-desktop-width}) and (max-width: #{$desktop-width - 1px}) {
    @content;
  }
}

@mixin low-desktop-min {
  @media screen and (min-width: #{$low-desktop-width}) {
    @content;
  }
}

@mixin tablet {
  @media screen and (max-width: #{$low-desktop-width - 1px}) {
    @content;
  }
}

@mixin tablet-only {
  @media screen and (min-width: #{$tablet-width}) and (max-width: #{$low-desktop-width - 1px}) {
    @content;
  }
}

@mixin tablet-min {
  @media screen and (min-width: #{$tablet-width}) {
    @content;
  }
}

@mixin mobile {
  @media screen and (max-width: #{$tablet-width - 1}) {
    @content;
  }
}

@mixin portrait {
  @media (orientation: portrait) {
    @content;
  }
}

@mixin landscape {
  @media (orientation: landscape) {
    @content;
  }
}

@mixin ie {
  @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
    @content;
  }
}

@mixin edge {
  @supports (-ms-ime-align:auto) {
    @content;
  }
}

@mixin ie-edge {
  @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
    @content;
  }
  @supports (-ms-ime-align:auto) {
    @content;
  }
}

@mixin safari {
  @media not all and (min-resolution: .001dpcm) {
    @content;
  }
}

@mixin size($value) {
  $width: nth($value, 1);
  $height: $width;
  @if length($value) > 1 {
    $height: nth($value, 2);
  }
  height: $height;
  width: $width;
}

@mixin triangle($size, $color, $direction) { // $direction: up, down, left, right, up-right, up-left, down-right, down-left
  $width: nth($size, 1);
  $height: nth($size, length($size));
  $foreground-color: nth($color, 1);
  $background-color: if(length($color) == 2, nth($color, 2), transparent);
  height: 0;
  width: 0;

  @if ($direction == up) or ($direction == down) or ($direction == right) or ($direction == left) {
    $width: $width / 2;
    $height: if(length($size) > 1, $height, $height / 2);
    @if $direction == up {
      border-bottom: $height solid $foreground-color;
      border-left: $width solid $background-color;
      border-right: $width solid $background-color;
    } @else if $direction == right {
      border-bottom: $width solid $background-color;
      border-left: $height solid $foreground-color;
      border-top: $width solid $background-color;
    } @else if $direction == down {
      border-left: $width solid $background-color;
      border-right: $width solid $background-color;
      border-top: $height solid $foreground-color;
    } @else if $direction == left {
      border-bottom: $width solid $background-color;
      border-right: $height solid $foreground-color;
      border-top: $width solid $background-color;
    }
  } @else if ($direction == up-right) or ($direction == up-left) {
    border-top: $height solid $foreground-color;
    @if $direction == up-right {
      border-left: $width solid $background-color;
    } @else if $direction == up-left {
      border-right: $width solid $background-color;
    }
  } @else if ($direction == down-right) or ($direction == down-left) {
    border-bottom: $height solid $foreground-color;

    @if $direction == down-right {
      border-left: $width solid $background-color;
    } @else if $direction == down-left {
      border-right: $width solid $background-color;
    }
  }
}

@mixin clickable() {
  cursor: pointer;
  user-select: none;
}

@mixin bg-cover() {
  background-size: cover;
  background-position: center;
}

@mixin responsive-svg() {
  display: block;
  width: 100%;
  height: 100%;
}

@mixin scrollable() {
  overflow: auto;
  -webkit-overflow-scrolling: touch;
}

@mixin font-face($font-family, $file-path, $weight: normal, $style: normal) {
  @font-face {
    font-family: $font-family;
    font-style: $style;
    font-weight: $weight;
    src: url('#{$file-path}.woff2') format('woff2'),
         url('#{$file-path}.woff') format('woff');
  }
}

@mixin aspect-ratio($width, $height: $width) {

  &::after {
    content: '';
    display: block;
    padding-top: 1 / ($width / $height) * 100%;
  }
}

@mixin full-pos($coord) {
  top: $coord;
  right: $coord;
  bottom: $coord;
  left: $coord;
}

@mixin full-abs($coord) {
  @include full-pos($coord);
  position: absolute;
}

@mixin full-fix($coord) {
  @include full-pos($coord);
  position: fixed;
}

@mixin flex-center() {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-center-inline() {
  display: inline-flex;
  align-items: center;
  justify-content: center;
}

@mixin no-break-li() {
  break-inside: avoid;
  page-break-inside: avoid;
}

@mixin spinner($size, $width, $color) {
  @include round($size);
  content: '';
  display: block;
  position: absolute;
  pointer-events: none;
  animation: spin .7s linear infinite;
  top: 50%;
  left: 50%;
  margin: (-($size / 2)) 0 0 (-($size / 2));
  border: $width solid transparent;
  border-bottom-color: $color;
  border-left-color: $color;
  z-index: 1;
}
